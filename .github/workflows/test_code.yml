name: Manual Tests
on:
  issue_comment:
    types: [created]

jobs:
  check-command:
    # Only run on pull request comments
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/run@')
    runs-on: ubuntu-latest
    outputs:
      should-run: ${{ steps.check.outputs.should-run }}
      pr-ref: ${{ steps.pr-info.outputs.ref }}
      pr-sha: ${{ steps.pr-info.outputs.sha }}
    steps:
      - name: Check if comment contains /run@
        id: check
        run: |
          if [[ "${{ github.event.comment.body }}" == "/run@"* ]]; then
            echo "should-run=true" >> $GITHUB_OUTPUT
          else
            echo "should-run=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Get PR info
        id: pr-info
        if: steps.check.outputs.should-run == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr_number="${{ github.event.issue.number }}"
          pr_info=$(gh api repos/${{ github.repository }}/pulls/$pr_number)
          echo "ref=$(echo "$pr_info" | jq -r .head.ref)" >> $GITHUB_OUTPUT
          echo "sha=$(echo "$pr_info" | jq -r .head.sha)" >> $GITHUB_OUTPUT
      
      - name: Add reaction to comment
        if: steps.check.outputs.should-run == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }}/reactions \
            --method POST \
            --field content="+1"

  test-matrix-backend:
    needs: check-command
    if: needs.check-command.outputs.should-run == 'true'
    name: Test the code (${{ matrix.backend }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        backend: [tensorflow, jax, torch, numpy]
    
    env:
      KERAS_BACKEND: ${{ matrix.backend }}
    
    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.check-command.outputs.pr-sha }}
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          
          # Install backend-specific dependencies
          if [ "${{ matrix.backend }}" == "tensorflow" ]; then
            pip install tensorflow
          elif [ "${{ matrix.backend }}" == "jax" ]; then
            pip install jax jaxlib
          elif [ "${{ matrix.backend }}" == "torch" ]; then
            pip install torch
          elif [ "${{ matrix.backend }}" == "numpy" ]; then
            pip install numpy
          fi
          
          # Install Keras
          pip install -U keras
          
          # Install additional dependencies
          pip install pytest pytest-cov timm
          pip install -r requirements.txt
          pip install -e .
      
      - name: Run tests
        run: |
          echo "Running tests with backend: $KERAS_BACKEND"
          
          # Print large message for layer tests
          echo ""
          echo "================================================================"
          echo "=                                                              ="
          echo "=                   RUNNING LAYER TESTS                        ="
          echo "=                                                              ="
          echo "================================================================"
          echo ""
          
          # Run layer tests
          pytest tests/layers/*_test.py -v --cov=./ --cov-append
          
          # Print large message for model tests
          echo ""
          echo "================================================================"
          echo "=                                                              ="
          echo "=                   RUNNING MODEL TESTS                        ="
          echo "=                                                              ="
          echo "================================================================"
          echo ""
          
          # Run model tests if they exist
          TEST_FILES=$(find tests/models -type f \( -name "test_*.py" -o -name "*_test.py" \) 2>/dev/null || echo "")
          if [ -n "$TEST_FILES" ]; then
            pytest $TEST_FILES -v --cov=./ --cov-append
          else
            echo "No model test files found. Skipping model tests."
          fi
          
          # Generate coverage report
          coverage xml -o coverage.xml
      
      - name: Upload coverage report
        uses: codecov/codecov-action@v5
        with:
          files: coverage.xml
          flags: keras-${{ matrix.backend }}
          fail_ci_if_error: false